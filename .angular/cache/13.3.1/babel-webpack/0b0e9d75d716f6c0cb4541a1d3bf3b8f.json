{"ast":null,"code":"import * as i0 from \"@angular/core\";\n\nfunction OnChangesComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const change_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(change_r1);\n  }\n}\n\nexport let OnChangesComponent = /*#__PURE__*/(() => {\n  class OnChangesComponent {\n    // This component is used to test the onChanges component lifecycle hook\n    constructor() {\n      // class variables\n      this.changeLog = [];\n    } // Component Lifecycle methods\n\n\n    ngOnChanges(changes) {\n      const log = [];\n\n      for (let propName in changes) {\n        let changedProp = changes[propName];\n        let to = JSON.stringify(changedProp.currentValue);\n\n        if (changedProp.isFirstChange()) {\n          log.push(`Initial value of ${propName} is set to ${to}`);\n        } else {\n          let from = JSON.stringify(changedProp.previousValue);\n          log.push(`${propName} changed from ${from} to ${to}`);\n        }\n      }\n\n      this.changeLog.push(log.join(', '));\n    }\n\n    ngOnInit() {}\n\n  }\n\n  OnChangesComponent.ɵfac = function OnChangesComponent_Factory(t) {\n    return new (t || OnChangesComponent)();\n  };\n\n  OnChangesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OnChangesComponent,\n    selectors: [[\"app-on-changes\"]],\n    inputs: {\n      minor: \"minor\",\n      major: \"major\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 3,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function OnChangesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\");\n        i0.ɵɵtemplate(3, OnChangesComponent_li_3_Template, 2, 1, \"li\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate2(\"Version \", ctx.major, \".\", ctx.minor, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.changeLog);\n      }\n    },\n    styles: [\"\"]\n  });\n  return OnChangesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}